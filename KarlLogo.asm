; this file is part of Karl Quappe, written by Malban
; in 2016
; all stuff contained here is public domain
;
;
; format:
; height, width
; shiftreg, ...,  shiftreg
; ....
; shiftreg, ...,  shiftreg
; 
FroggerLogo_data:
 db $10, $1C 
 db %00111110, %00000001, %11100000, %00000000, %11000000, %00000000, %11111111, %11100000, %00011100, %00000000, %00000000, %00000000, %00001111, %11111110, %00000000, %11111000, %00000111, %10000000, %00000111, %10000000, %00000111, %11111111, %00000000, %11111111, %11110000, %00011111, %11111111, %10000000; forward
 db %01000001, %00000110, %00010000, %00000001, %00110000, %00000001, %00000000, %00011000, %01100010, %00000000, %00000000, %00000000, %00110000, %00000001, %10000001, %00001100, %00011000, %01100000, %00001100, %11000000, %00001100, %00000000, %11100001, %00000000, %00001100, %00110000, %00000000, %01100000; forward
 db %11000001, %00011100, %00011000, %00000110, %00011000, %00000001, %00000000, %00000110, %01100001, %00000000, %00000000, %00000000, %11000000, %00000000, %11100001, %00000100, %00011000, %01100000, %00011000, %01100000, %00011000, %00000000, %00110001, %00000000, %00000110, %01100000, %00000000, %01100000; forward
 db %11000001, %00110000, %00110000, %00001100, %00001100, %00000001, %00000000, %00000011, %01100001, %00000000, %00000000, %00000001, %10000000, %00000000, %00110001, %00000100, %00011000, %01100000, %00110000, %00110000, %00011000, %00000000, %00011001, %00000000, %00000001, %01100000, %01111111, %11000000; forward
 db %11000001, %11000000, %11000000, %00001100, %00001100, %00000001, %00011111, %11000001, %01100001, %00000000, %00000000, %00000011, %00000111, %11111000, %00011001, %00000100, %00011000, %01100000, %01100000, %00011000, %00011000, %00111110, %00001101, %00000011, %11100001, %01100001, %11111111, %00000000; forward
 db %11000001, %10000011, %10000000, %00011000, %00000110, %00000001, %00011000, %01100001, %01100001, %00000000, %00000000, %00000110, %00011000, %00000110, %00001101, %00000100, %00011000, %01100000, %11000000, %00001100, %00011000, %01100001, %00001111, %00000110, %00110001, %01100001, %00000000, %00000000; forward
 db %11000000, %00000110, %00000000, %00110000, %11000011, %00000001, %00011000, %01100001, %01100001, %00000000, %00000000, %00000100, %00110000, %00000011, %00001111, %00000100, %00011000, %01100000, %11000011, %10001100, %00011000, %01100001, %00001111, %00000110, %00110001, %01100000, %11111111, %00000000; forward
 db %11000000, %00011100, %00000000, %01100001, %01100001, %00000001, %00011101, %11000001, %01100001, %00000000, %00000000, %00001100, %00110000, %00000001, %00001111, %00000100, %00011000, %01100001, %10000110, %11000110, %00011000, %01100111, %00001101, %00000110, %11100001, %01100000, %00000000, %11000000; forward
 db %11000000, %00001110, %00000000, %11000001, %00110000, %11000001, %00000110, %00000011, %01100001, %00000000, %00000000, %00001100, %00110000, %00000001, %00001111, %00000100, %00011000, %01100011, %00001100, %01000011, %00011000, %00111000, %00001101, %00000011, %10000011, %01100000, %00000000, %11000000; forward
 db %11000001, %00000011, %00000000, %11000011, %11111000, %01100001, %00000000, %00001100, %01100001, %00000000, %00000000, %00000100, %00110000, %00000011, %00001111, %00000100, %00011000, %01100011, %00001111, %11100001, %00011000, %00000000, %00011001, %00000000, %00000110, %01100000, %11111111, %00000000; forward
 db %11000001, %11000000, %11000001, %10000000, %00000000, %00110001, %00000000, %00111000, %01100001, %00000000, %00000000, %00000110, %00011100, %00000110, %00101101, %00000110, %00011000, %01100110, %00000000, %00000001, %10011000, %00000000, %11100001, %00000000, %00011100, %01100001, %00000000, %00000000; forward
 db %11000001, %01100000, %00110001, %00000000, %00000000, %00011001, %00011100, %00000110, %01100001, %11111111, %00000000, %00000011, %00000111, %11111000, %00111000, %10000011, %11110000, %01101100, %00000000, %00000000, %11011000, %00111111, %00000001, %00000111, %11100000, %01100001, %11111111, %10000000; forward
 db %11000001, %00011000, %00011011, %00000111, %11111100, %00001101, %00011111, %00000001, %01100000, %11111111, %11000000, %00000001, %00000000, %00000000, %00000110, %11000000, %11000000, %01101000, %00111111, %11110000, %01111000, %01100000, %00000001, %00001100, %00000000, %01100000, %01111111, %10000000; forward
 db %11000001, %00001110, %00001110, %00011100, %00000110, %00001101, %00011001, %11000001, %01100000, %00000000, %11000000, %00000000, %11100000, %00000001, %00000110, %01100000, %00000001, %11011000, %01100000, %00011000, %01111000, %01100000, %00000001, %00001100, %00000000, %01100000, %00000000, %01100000; forward
 db %01000001, %00000011, %00001110, %00011000, %00000011, %00011001, %00011000, %01110001, %01100000, %00000000, %11000000, %00000000, %00111000, %00000011, %11000110, %00011000, %00000011, %00011000, %11000000, %00001100, %11001100, %11000000, %00000001, %00001100, %00000000, %00110000, %00000000, %01100000; forward
 db %00111110, %00000000, %11110001, %11100000, %00000001, %11110001, %11110000, %00011110, %00011111, %11111111, %00000000, %00000000, %00000111, %11111100, %00111100, %00000111, %11111000, %00000111, %10000000, %00000111, %10000111, %10000000, %00000000, %11111000, %00000000, %00001111, %11111111, %11000000; forward
;
; Note:
; The vectrex uses the VIA 6522 and the models of VIA it uses has some bugs. 
; One of its bugs is, that a complete shift cycle does not 
; shift 8 times for one byte, but 8+1. The last shifted value is repeated.
; So that e.g.
; 0101 0101 [e.g. part of a bitmap]
;
; results in an output like:
;
; 0101 0101 1
;
; In the normal "text" routines you do not see that, since letters always end with a "0" 
; and a double "00" result just in a little bit more space between letters.
; In a "continues" bitmap you must align or tweak the bitmap thus, that you do not (or only barely) see bit doubles.
;
; I already did that (to some extend) to the title bitmap - and I thought I did a good job :-(.
; It certainly is even more difficult to do if you are working with "diagonals", since you can not get rid of a double step.
; See letter "A"
